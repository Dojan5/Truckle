{"version":3,"sources":["functions/calculations.ts","icons/calculatorIcon.tsx","icons/informationIcon.tsx","components/menubar.jsx","components/loadingSpinner.jsx","components/languageSwitcher.tsx","components/toggleSwitch.tsx","icons/teeko.jpg","pages/aboutPage.jsx","pages/loadingPage.jsx","App.js","reportWebVitals.js","localisation/i18n.ts","index.tsx"],"names":["BearingClass","CalculatorIcon","xmlns","viewBox","width","height","fill","d","InformationIcon","Menubar","useTranslation","t","className","to","icon","process","MenuButton","children","location","useLocation","navigate","useNavigate","match","pathname","onClick","LoadingSpinner","LanguageSwitcher","i18n","currentLanguage","language","setLanguage","changeLanguage","document","cookie","ToggleSwitch","props","name","checked","onChange","disabled","id","type","evt","htmlFor","AboutPage","href","rel","target","alt","src","Teeko","LoadingPage","grossWeightTable","_grossWeightTable","roadLoadTable","_roadLoadTable","calculateBearingClass","frontAxleOverride","backAxleOverride","frontAxleTableKey","backAxleTableKey","grossWeightTableKey","bClass","bk","frontAxleTableValue","getLoadWeightValue","backAxleTableValue","grossWeightTableValue","convertToKilo","vehicleWeightAllowanceSum","convertToTonnes","value","calculateAllowedLoad","weightAllowance","serviceWeight","key","App","useState","setServiceWeight","setFrontAxleOverride","setBackAxleOverride","frontAxle","setFrontAxle","backAxle","setBackAxle","grossWeight","setGrossWeight","displayKilos","setDisplayKilos","result","setResult","handleNumericInputFocus","select","calculate","console","table","undefined","frontAxleOverrideInKg","backAxleOverrideInKg","BK1","BK2","BK3","BK4","calculateTS","onFocus","parseFloat","pattern","inputValue","toString","Object","keys","rlTable","map","gwTable","r","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","detection","order","caches","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback","path","element","getElementById"],"mappings":"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","file":"static/js/main.c85528e8.chunk.js","sourcesContent":["import _grossWeightTable from '../data/grossWeightTable.json';\r\nimport _roadLoadTable from '../data/roadLoadTable.json';\r\n\r\nconst grossWeightTable = _grossWeightTable as DataTable;\r\nconst roadLoadTable = _roadLoadTable as DataTable;\r\n\r\nenum BearingClass {\r\n    BK1 = 0,\r\n    BK2 = 1,\r\n    BK3 = 2,\r\n    BK4 = 3\r\n}\r\n\r\ntype CalculationResult = [\r\n    BK1: number,\r\n    BK2: number,\r\n    BK3: number,\r\n    BK4: number\r\n];\r\n\r\ninterface DataTable {\r\n    [key: string]: number[]\r\n}\r\n\r\nexport function calculate(\r\n    frontAxleOverride: number,\r\n    backAxleOverride: number,\r\n    frontAxleTableKey: string,\r\n    backAxleTableKey: string,\r\n    grossWeightTableKey: string\r\n): CalculationResult {\r\n    let frontAxleOverrideInKg: number = convertToKilo(frontAxleOverride);\r\n    let backAxleOverrideInKg: number = convertToKilo(backAxleOverride);\r\n\r\n    //Calculate\r\n    let bk1 = calculateBearingClass(frontAxleOverrideInKg, backAxleOverrideInKg, frontAxleTableKey, backAxleTableKey, grossWeightTableKey, BearingClass.BK1);\r\n    let bk2 = calculateBearingClass(frontAxleOverrideInKg, backAxleOverrideInKg, frontAxleTableKey, backAxleTableKey, grossWeightTableKey, BearingClass.BK2);\r\n    let bk3 = calculateBearingClass(frontAxleOverrideInKg, backAxleOverrideInKg, frontAxleTableKey, backAxleTableKey, grossWeightTableKey, BearingClass.BK3);\r\n    let bk4 = calculateBearingClass(frontAxleOverrideInKg, backAxleOverrideInKg, frontAxleTableKey, backAxleTableKey, grossWeightTableKey, BearingClass.BK4);\r\n\r\n    let result = [bk1, bk2, bk3, bk4] as CalculationResult;\r\n    return result;\r\n}\r\n\r\nfunction calculateBearingClass(\r\n    frontAxleOverride: number,\r\n    backAxleOverride: number,\r\n    frontAxleTableKey: string,\r\n    backAxleTableKey: string,\r\n    grossWeightTableKey: string,\r\n    bClass: BearingClass\r\n): number {\r\n\r\n    let frontAxleTableValue = getLoadWeightValue(frontAxleTableKey, bClass);\r\n    let backAxleTableValue = getLoadWeightValue(backAxleTableKey, bClass);\r\n    let grossWeightTableValue = getGrossWeightValue(grossWeightTableKey, bClass);\r\n\r\n    let frontAxleWeightAllowance = (frontAxleOverride <= frontAxleTableValue)\r\n        ? frontAxleOverride\r\n        : frontAxleTableValue;\r\n\r\n    let backAxleWeightAllowance = (backAxleOverride <= backAxleTableValue)\r\n        ? backAxleOverride\r\n        : backAxleTableValue;\r\n    \r\n    let vehicleWeightAllowanceSum = frontAxleWeightAllowance + backAxleWeightAllowance;\r\n\r\n    let grossWeightAllowance = (vehicleWeightAllowanceSum <= grossWeightTableValue)\r\n        ? vehicleWeightAllowanceSum\r\n        : grossWeightTableValue;\r\n\r\n    return grossWeightAllowance;\r\n}\r\n\r\nexport function convertToTonnes(value: number): number {\r\n    return (value > 1000) ? (value / 1000) : value;\r\n}\r\n\r\nexport function convertToKilo(value: number): number {\r\n    return (value < 1000) ? (value * 1000) : value;\r\n}\r\n\r\nexport function calculateAllowedLoad(weightAllowance: number, serviceWeight: number): number {\r\n    let value = ((weightAllowance - serviceWeight) < 0) ? 0 : (weightAllowance - serviceWeight);\r\n    return value; \r\n}\r\n\r\nfunction getGrossWeightValue(key: string, bk: BearingClass): number {\r\n    let tableValue = grossWeightTable[key]\r\n    let value = convertToKilo(tableValue[bk]);\r\n    return value;\r\n}\r\n\r\nfunction getLoadWeightValue(key: string, bk: BearingClass): number {\r\n    let tableValue = roadLoadTable[key];\r\n    let value = convertToKilo(tableValue[bk]);\r\n    return value;\r\n}","import React from 'react';\r\n\r\nexport const CalculatorIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n        <path fill=\"#fff\" d=\"M4 2h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1zm1 2v16h14V4H5zm2 2h10v4H7V6zm0 6h2v2H7v-2zm0 4h2v2H7v-2zm4-4h2v2h-2v-2zm0 4h2v2h-2v-2zm4-4h2v6h-2v-6z\" />\r\n    </svg>\r\n)","import React from 'react';\r\n\r\nexport const InformationIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n        <path fill=\"#fff\" d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zM11 7h2v2h-2V7zm0 4h2v6h-2v-6z\" />\r\n    </svg>\r\n)","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CalculatorIcon, InformationIcon } from '../icons'; \r\n\r\nexport const Menubar = () => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <nav className=\"app-menu\">\r\n            <MenuButton to=\"/\" icon={<CalculatorIcon />}>{t(\"interface.calculator\")}</MenuButton>\r\n            {(process.env.NODE_ENV && process.env.NODE_ENV === 'development') && (\r\n                <MenuButton to=\"/loading\">Loading</MenuButton>\r\n            )}\r\n            <MenuButton to=\"/about\" icon={<InformationIcon />}>{t(\"interface.about\")}</MenuButton>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst MenuButton = ({ children, to, icon }) => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const match = (location.pathname === to);\r\n\r\n    const handleClick = () => {\r\n        navigate(to);\r\n    }\r\n    \r\n    return (\r\n        <button className={match ? \"menu-button active\" : \"menu-button\"}\r\n            onClick={() => handleClick()}\r\n        >\r\n            {icon && icon}\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const LoadingSpinner = () => (\r\n    <div className=\"loading-spinner\">\r\n        <div className=\"spinner\">\r\n            <span>\r\n                <span>\r\n                    <span>\r\n                        <span />\r\n                    </span>\r\n                </span>\r\n            </span>\r\n\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const LanguageSwitcher = () => {\r\n    const [t, i18n] = useTranslation()\r\n    const currentLanguage = i18n.language;\r\n    const setLanguage = (language: string) => {\r\n        i18n.changeLanguage(language);\r\n        document.cookie = `i18next=${language}`;\r\n    }\r\n    return (\r\n        <fieldset className=\"language-switcher\">\r\n            <legend>{t(\"interface.language\")}</legend>\r\n            <button className={currentLanguage === 'en' ? 'active' : ''} onClick={() => setLanguage(\"en\")}>English</button>\r\n            <button className={currentLanguage === 'sv' ? 'active' : ''} onClick={() => setLanguage(\"sv\")}>Svenska</button>\r\n        </fieldset>\r\n    );\r\n}","import React from 'react';\r\n\r\ninterface IToggleSwitch {\r\n\tname: string;\r\n\tchecked: boolean;\r\n\tonChange: Function;\r\n\tdisabled?: boolean;\r\n}\r\n\r\nexport const ToggleSwitch: React.FC<IToggleSwitch> = (props) => {\r\n\tconst { name, checked, onChange, disabled } = props;\r\n\r\n\treturn (\r\n\t\t<div className=\"toggle-switch\">\r\n\t\t\t<input \r\n\t\t\t\tid={name}\r\n\t\t\t\tclassName=\"toggle-switch-input\" \r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tname={name}\r\n\t\t\t\tchecked={checked}\t\r\n\t\t\t\tonChange={(evt) => onChange(evt)}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t/>\r\n\t\t\t<label\r\n\t\t\t\tclassName=\"toggle-switch-label\"\r\n\t\t\t\thtmlFor={name}\r\n\t\t\t>\r\n\t\t\t\t<span className=\"toggle-switch-button\" />\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t)\r\n}","export default __webpack_public_path__ + \"static/media/teeko.2d30ff3e.jpg\";","import React from 'react';\r\nimport { LanguageSwitcher } from '../components';\r\nimport Teeko from '../icons/teeko.jpg';\r\n\r\nexport const AboutPage = () => {\r\n    return (\r\n        <>\r\n            <section className=\"about-page\">\r\n                <h1>Holy shipping!</h1>\r\n                <p>To be frank, I'm not much for writing descriptions of things I create. It's something I ought to practise more on, since it usually comes back and bites me in the arse.</p>\r\n                <p>I wrote this application in conjunction with a dear friend, with the hopes of making a tedious task a bit easier to complete.</p>\r\n                <p>If you're interested in the project, the source-code is available on <a className=\"spiffy-link\" href=\"https://github.com/Dojan5/Truckle\" rel=\"noreferrer\" target=\"_blank\">on GitHub</a>. If you're interested in me, you can find my website over at <a className=\"spiffy-link\" href=\"https://grovecastle.me\" rel=\"noreferrer\" target=\"_blank\"> here.</a></p>\r\n                <p>Please enjoy this picture of my dog, Teeko.</p>\r\n                <img alt=\"Teeko\" src={Teeko} className=\"teeko-image\" />\r\n            </section>\r\n            <LanguageSwitcher />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { LoadingSpinner } from '../components';\r\n\r\nexport const LoadingPage = () => (\r\n    <div className=\"loading-page\">\r\n        <LoadingSpinner />\r\n    </div>\r\n)","import \"./App.scss\";\r\nimport gwTable from \"./data/grossWeightTable.json\";\r\nimport rlTable from \"./data/roadLoadTable.json\";\r\nimport React, { useState } from \"react\";\r\nimport { ToggleSwitch } from \"./components/toggleSwitch.tsx\";\r\nimport { calculate as calculateTS, calculateAllowedLoad, convertToTonnes } from \"./functions/calculations.ts\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nfunction App() {\r\n\tconst [t] = useTranslation();\r\n\tconst [serviceWeight, setServiceWeight] = useState(12000);\r\n\tconst [frontAxleOverride, setFrontAxleOverride] = useState(0);\r\n\tconst [backAxleOverride, setBackAxleOverride] = useState(0);\r\n\tconst [frontAxle, setFrontAxle] = useState(null);\r\n\tconst [backAxle, setBackAxle] = useState(null);\r\n\tconst [grossWeight, setGrossWeight] = useState(null);\r\n\tconst [displayKilos, setDisplayKilos] = useState(true);\r\n\r\n\tconst [result, setResult] = useState([0, 0, 0, 0]);\r\n\r\n\tconst handleServiceWeightChange = (evt) => {\r\n\t\tlet value = parseFloat(evt.target.value);\r\n\t\tsetServiceWeight(value);\r\n\t};\r\n\r\n\tconst handleFrontOverrideChange = (evt) => {\r\n\t\tlet value = parseFloat(evt.target.value);\r\n\t\tsetFrontAxleOverride(value);\r\n\t};\r\n\r\n\tconst handleBackOverrideChange = (evt) => {\r\n\t\tlet value = parseFloat(evt.target.value);\r\n\t\tsetBackAxleOverride(value);\r\n\t};\r\n\r\n\tconst handleFrontAxleChange = (evt) => {\r\n\t\tlet inputValue = evt.target.value;\r\n\t\tlet value = (typeof (inputValue) !== \"string\") ? inputValue.toString() : inputValue;\r\n\t\tsetFrontAxle(value);\r\n\t};\r\n\r\n\tconst handleBackAxleChange = (evt) => {\r\n\t\tlet inputValue = evt.target.value;\r\n\t\tlet value = (typeof (inputValue) !== \"string\") ? inputValue.toString() : inputValue;\r\n\t\tsetBackAxle(value);\r\n\t};\r\n\r\n\tconst handleGrossWeightChange = (evt) => {\r\n\t\tlet inputValue = evt.target.value;\r\n\t\tlet value = (typeof (inputValue) !== \"string\") ? inputValue.toString() : inputValue;\r\n\t\tsetGrossWeight(value);\r\n\t};\r\n\r\n\tconst handleNumericInputFocus = (evt) => evt.target.select();\r\n\r\n\tconst calculate = (evt) => {\r\n\t\tconsole.table(frontAxleOverride, backAxleOverride, frontAxle, backAxle, grossWeight);\r\n\t\tif (frontAxleOverride === null || frontAxleOverride === undefined) return;\r\n\t\tif (backAxleOverride === null || backAxleOverride === undefined) return;\r\n\t\tif (frontAxle === null || frontAxle === undefined) return;\r\n\t\tif (backAxle === null || backAxle === undefined) return;\r\n\t\tif (grossWeight === null || backAxle === undefined) return;\r\n\r\n\t\tlet result = calculateTS(\r\n\t\t\tfrontAxleOverride,\r\n\t\t\tbackAxleOverride,\r\n\t\t\tfrontAxle,\r\n\t\t\tbackAxle,\r\n\t\t\tgrossWeight\r\n\t\t);\r\n\r\n\t\tsetResult(result);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<legend>{t(\"vehicleSpecification\")}</legend>\r\n\t\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t\t<label>{t(\"vehicleWeight\")}</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tname=\"weight\"\r\n\t\t\t\t\t\t\tvalue={serviceWeight}\r\n\t\t\t\t\t\t\tonFocus={handleNumericInputFocus}\r\n\t\t\t\t\t\t\tonChange={handleServiceWeightChange}\r\n\t\t\t\t\t\t\tpattern=\"[0-9]*\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t\t<label>{t(\"frontAxleOverride\")}</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tvalue={frontAxleOverride}\r\n\t\t\t\t\t\t\tonFocus={handleNumericInputFocus}\r\n\t\t\t\t\t\t\tonChange={handleFrontOverrideChange}\r\n\t\t\t\t\t\t\tpattern=\"[0-9]*\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t\t<label>{t(\"backAxleOverride\")}</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tvalue={backAxleOverride}\r\n\t\t\t\t\t\t\tonFocus={handleNumericInputFocus}\r\n\t\t\t\t\t\t\tonChange={handleBackOverrideChange}\r\n\t\t\t\t\t\t\tpattern=\"[0-9]*\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<legend>{t(\"tableSettings\")}</legend>\r\n\t\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t\t<label>{t(\"frontAxle\")}</label>\r\n\t\t\t\t\t\t<select name=\"frontAxle\" onChange={handleFrontAxleChange}>\r\n\t\t\t\t\t\t\t<option value={null}>{t(\"interface.pleaseSelect\")}</option>\r\n\t\t\t\t\t\t\t{Object.keys(rlTable).map((key) => (\r\n\t\t\t\t\t\t\t\t<option key={\"fa\" + key} value={key}>{key}</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t\t<label>{t(\"backAxle\")}</label>\r\n\t\t\t\t\t\t<select name=\"backAxle\" onChange={handleBackAxleChange}>\r\n\t\t\t\t\t\t\t<option value={null}>{t(\"interface.pleaseSelect\")}</option>\r\n\t\t\t\t\t\t\t{Object.keys(rlTable).map((key) => (\r\n\t\t\t\t\t\t\t\t<option key={\"ba\" + key} value={key}>{key}</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-control\">\r\n\t\t\t\t\t\t<label>{t(\"weightTable\")}</label>\r\n\t\t\t\t\t\t<select name=\"grossWeight\" onChange={handleGrossWeightChange}>\r\n\t\t\t\t\t\t\t<option value={null}>{t(\"interface.pleaseSelect\")}</option>\r\n\t\t\t\t\t\t\t{Object.keys(gwTable).map((key) => (\r\n\t\t\t\t\t\t\t\t<option key={\"gw\" + key} value={key}>{key}</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<div className=\"result-table\">\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td className=\"header\">{t(\"class\")}</td>\r\n\t\t\t\t\t\t\t\t<td className=\"text-center header\">{t(\"weightAllowance\")}</td>\r\n\t\t\t\t\t\t\t\t<td className=\"text-right header\">{t(\"allowedLoad\")}</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{result.map((r, i) => (\r\n\t\t\t\t\t\t\t\t<tr key={\"r\" + i}>\r\n\t\t\t\t\t\t\t\t\t<td className=\"header\">BK{i + 1}</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t{displayKilos ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{r} kg</span>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{convertToTonnes(r)} t</span>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td className=\"text-right\">\r\n\t\t\t\t\t\t\t\t\t\t{displayKilos ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{calculateAllowedLoad(r, serviceWeight)} kg</span>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{convertToTonnes(calculateAllowedLoad(r, serviceWeight))} t</span>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t<div className=\"unit-toggle\">\r\n\t\t\t\t\t\t<ToggleSwitch \r\n\t\t\t\t\t\t\tname=\"kiloToggler\" \r\n\t\t\t\t\t\t\tonChange={() => setDisplayKilos(!displayKilos)} \r\n\t\t\t\t\t\t\tchecked={displayKilos} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button onClick={() => calculate()} className=\"btn\">{t(\"interface.calculate\")}</button>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import i18n, { InitOptions } from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst options: InitOptions = {\r\n    fallbackLng: 'sv',\r\n    debug: true,\r\n    detection: {\r\n        order: ['queryString', 'cookie'],\r\n        caches: ['cookie']\r\n    },\r\n    interpolation: {\r\n        escapeValue: false\r\n    }\r\n}\r\n\r\ni18n.use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init(options)\r\n\r\nexport default i18n;","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport { AboutPage, LoadingPage } from './pages';\r\nimport { Menubar } from './components';\r\nimport App from './App';\r\nimport 'normalize.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './localisation/i18n';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Suspense fallback={<LoadingPage />}>\r\n      <Router>\r\n        <section className=\"app-content\">\r\n          <Routes>\r\n            <Route path=\"/\" element={<App />} />\r\n            <Route path=\"/loading\" element={<LoadingPage />} />\r\n            <Route path=\"/about\" element={<AboutPage />} />\r\n          </Routes>\r\n        </section>\r\n        <Menubar />\r\n      </Router>\r\n    </Suspense>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}