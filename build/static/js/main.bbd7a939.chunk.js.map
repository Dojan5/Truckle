{"version":3,"sources":["functions/calculations.ts","icons/teeko.jpg","pages/aboutPage.jsx","icons/calculatorIcon.tsx","icons/informationIcon.tsx","icons/settingsIcon.tsx","components/menubar.jsx","components/loadingSpinner.jsx","components/languageSwitcher.tsx","components/toggleSwitch.tsx","components/unitSelector.tsx","pages/loadingPage.jsx","pages/settingsPage.tsx","App.js","reportWebVitals.js","localisation/i18n.ts","index.tsx"],"names":["BearingClass","AboutPage","className","href","rel","target","alt","src","Teeko","CalculatorIcon","xmlns","viewBox","width","height","fill","d","InformationIcon","SettingsIcon","Menubar","useTranslation","t","to","icon","MenuButton","children","location","useLocation","navigate","useNavigate","match","pathname","onClick","LoadingSpinner","LanguageSwitcher","i18n","currentLanguage","language","setLanguage","changeLanguage","document","cookie","ToggleSwitch","props","name","checked","onChange","disabled","id","type","evt","htmlFor","UnitSelector","LoadingPage","SettingsPage","grossWeightTable","_grossWeightTable","roadLoadTable","_roadLoadTable","calculateBearingClass","taxedWeight","frontAxleOverride","backAxleOverride","frontAxleTableKey","backAxleTableKey","grossWeightTableKey","bClass","bk","frontAxleTableValue","getLoadWeightValue","backAxleTableValue","grossWeightTableValue","convertToKilo","vehicleWeightAllowanceSum","grossWeightAllowance","convertToTonnes","value","calculateAllowedLoad","weightAllowance","serviceWeight","key","App","useState","setServiceWeight","setTaxedWeight","setFrontAxleOverride","setBackAxleOverride","frontAxle","setFrontAxle","backAxle","setBackAxle","grossWeight","setGrossWeight","displayKilos","setDisplayKilos","result","setResult","handleNumericInputFocus","select","calculate","console","table","undefined","taxedWeightInKg","frontAxleOverrideInKg","backAxleOverrideInKg","BK1","BK2","BK3","BK4","calculateTS","onFocus","parseFloat","pattern","inputValue","toString","Object","keys","rlTable","map","gwTable","r","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","detection","order","caches","interpolation","escapeValue","Main","StrictMode","fallback","Content","useAckee","server","domainId","detailed","ignoreLocalhost","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bbd7a939.chunk.js","sourcesContent":["import _grossWeightTable from '../data/grossWeightTable.json';\r\nimport _roadLoadTable from '../data/roadLoadTable.json';\r\n\r\nconst grossWeightTable = _grossWeightTable as DataTable;\r\nconst roadLoadTable = _roadLoadTable as DataTable;\r\n\r\nenum BearingClass {\r\n    BK1 = 0,\r\n    BK2 = 1,\r\n    BK3 = 2,\r\n    BK4 = 3\r\n}\r\n\r\ntype CalculationResult = [\r\n    BK1: number,\r\n    BK2: number,\r\n    BK3: number,\r\n    BK4: number\r\n];\r\n\r\ninterface DataTable {\r\n    [key: string]: number[]\r\n}\r\n\r\nexport function calculate(\r\n    taxedWeight: number,\r\n    frontAxleOverride: number,\r\n    backAxleOverride: number,\r\n    frontAxleTableKey: string,\r\n    backAxleTableKey: string,\r\n    grossWeightTableKey: string\r\n): CalculationResult {\r\n    let taxedWeightInKg: number = convertToKilo(taxedWeight);\r\n    let frontAxleOverrideInKg: number = convertToKilo(frontAxleOverride);\r\n    let backAxleOverrideInKg: number = convertToKilo(backAxleOverride);\r\n\r\n    //Calculate\r\n    let bk1 = calculateBearingClass(taxedWeightInKg, frontAxleOverrideInKg, backAxleOverrideInKg, frontAxleTableKey, backAxleTableKey, grossWeightTableKey, BearingClass.BK1);\r\n    let bk2 = calculateBearingClass(taxedWeightInKg, frontAxleOverrideInKg, backAxleOverrideInKg, frontAxleTableKey, backAxleTableKey, grossWeightTableKey, BearingClass.BK2);\r\n    let bk3 = calculateBearingClass(taxedWeightInKg, frontAxleOverrideInKg, backAxleOverrideInKg, frontAxleTableKey, backAxleTableKey, grossWeightTableKey, BearingClass.BK3);\r\n    let bk4 = calculateBearingClass(taxedWeightInKg, frontAxleOverrideInKg, backAxleOverrideInKg, frontAxleTableKey, backAxleTableKey, grossWeightTableKey, BearingClass.BK4);\r\n\r\n    let result = [bk1, bk2, bk3, bk4] as CalculationResult;\r\n    return result;\r\n}\r\n\r\nfunction calculateBearingClass(\r\n    taxedWeight: number,\r\n    frontAxleOverride: number,\r\n    backAxleOverride: number,\r\n    frontAxleTableKey: string,\r\n    backAxleTableKey: string,\r\n    grossWeightTableKey: string,\r\n    bClass: BearingClass\r\n): number {\r\n\r\n    let frontAxleTableValue = getLoadWeightValue(frontAxleTableKey, bClass);\r\n    let backAxleTableValue = getLoadWeightValue(backAxleTableKey, bClass);\r\n    let grossWeightTableValue = getGrossWeightValue(grossWeightTableKey, bClass);\r\n\r\n    let frontAxleWeightAllowance = (frontAxleOverride <= frontAxleTableValue)\r\n        ? frontAxleOverride\r\n        : frontAxleTableValue;\r\n\r\n    let backAxleWeightAllowance = (backAxleOverride <= backAxleTableValue)\r\n        ? backAxleOverride\r\n        : backAxleTableValue;\r\n\r\n    let vehicleWeightAllowanceSum = frontAxleWeightAllowance + backAxleWeightAllowance;\r\n\r\n    let grossWeightAllowance = (vehicleWeightAllowanceSum <= grossWeightTableValue)\r\n        ? vehicleWeightAllowanceSum\r\n        : grossWeightTableValue;\r\n\r\n    //Only return taxed weight if it's smaller than the GWA, but actually has a value, otherwise ignore\r\n    if (grossWeightAllowance > taxedWeight && taxedWeight > 0)\r\n        return taxedWeight;\r\n\r\n    return grossWeightAllowance;\r\n}\r\n\r\nexport function convertToTonnes(value: number): number {\r\n    return (value > 1000) ? (value / 1000) : value;\r\n}\r\n\r\nexport function convertToKilo(value: number): number {\r\n    return (value < 1000) ? (value * 1000) : value;\r\n}\r\n\r\nexport function convertToMillimetres(value: number): number {\r\n    return value * 1000;\r\n}\r\n\r\nexport function calculateAllowedLoad(weightAllowance: number, serviceWeight: number): number {\r\n    let value = ((weightAllowance - serviceWeight) < 0) ? 0 : (weightAllowance - serviceWeight);\r\n    return value;\r\n}\r\n\r\nfunction getGrossWeightValue(key: string, bk: BearingClass): number {\r\n    let tableValue = grossWeightTable[key]\r\n    let value = convertToKilo(tableValue[bk]);\r\n    return value;\r\n}\r\n\r\nfunction getLoadWeightValue(key: string, bk: BearingClass): number {\r\n    let tableValue = roadLoadTable[key];\r\n    let value = convertToKilo(tableValue[bk]);\r\n    return value;\r\n}","export default __webpack_public_path__ + \"static/media/teeko.2d30ff3e.jpg\";","import React from 'react';\r\nimport Teeko from '../icons/teeko.jpg';\r\n\r\nexport const AboutPage = () => {\r\n    return (\r\n        <>\r\n            <section className=\"about-page\">\r\n                <h1>Holy shipping!</h1>\r\n                <p>To be frank, I'm not much for writing descriptions of things I create. It's something I ought to practise more on, since it usually comes back and bites me in the arse.</p>\r\n                <p>I wrote this application in conjunction with a dear friend, with the hopes of making a tedious task a bit easier to complete.</p>\r\n                <p>If you're interested in the project, the source-code is available on <a className=\"spiffy-link\" href=\"https://github.com/Dojan5/Truckle\" rel=\"noreferrer\" target=\"_blank\">on GitHub</a>. If you're interested in me, you can find my website over at <a className=\"spiffy-link\" href=\"https://grovecastle.me\" rel=\"noreferrer\" target=\"_blank\"> here.</a></p>\r\n                <p>Please enjoy this picture of my dog, Teeko.</p>\r\n                <img alt=\"Teeko\" src={Teeko} className=\"teeko-image\" />\r\n            </section>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const CalculatorIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n        <path fill=\"#fff\" d=\"M4 2h16a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1zm3 10v2h2v-2H7zm0 4v2h2v-2H7zm4-4v2h2v-2h-2zm0 4v2h2v-2h-2zm4-4v6h2v-6h-2zM7 6v4h10V6H7z\" />\r\n    </svg>\r\n)","import React from 'react';\r\n\r\nexport const InformationIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n        <path fill=\"#fff\" d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-1-11v6h2v-6h-2zm0-4v2h2V7h-2z\" />\r\n    </svg>\r\n)","import React from 'react';\r\n\r\nexport const SettingsIcon = () => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n        <path fill=\"#fff\" d=\"M5.334 4.545a9.99 9.99 0 0 1 3.542-2.048A3.993 3.993 0 0 0 12 3.999a3.993 3.993 0 0 0 3.124-1.502 9.99 9.99 0 0 1 3.542 2.048 3.993 3.993 0 0 0 .262 3.454 3.993 3.993 0 0 0 2.863 1.955 10.043 10.043 0 0 1 0 4.09c-1.16.178-2.23.86-2.863 1.955a3.993 3.993 0 0 0-.262 3.455 9.99 9.99 0 0 1-3.542 2.047A3.993 3.993 0 0 0 12 20a3.993 3.993 0 0 0-3.124 1.502 9.99 9.99 0 0 1-3.542-2.047 3.993 3.993 0 0 0-.262-3.455 3.993 3.993 0 0 0-2.863-1.954 10.043 10.043 0 0 1 0-4.091 3.993 3.993 0 0 0 2.863-1.955 3.993 3.993 0 0 0 .262-3.454zM13.5 14.597a3 3 0 1 0-3-5.196 3 3 0 0 0 3 5.196z\" />\r\n    </svg>\r\n)","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CalculatorIcon, InformationIcon, SettingsIcon } from '../icons'; \r\n\r\nexport const Menubar = () => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <nav className=\"app-menu\">\r\n            <MenuButton to=\"/\" icon={<CalculatorIcon />}>{t(\"interface.calculator\")}</MenuButton>\r\n            <MenuButton to=\"/settings\" icon={<SettingsIcon />}>{t(\"interface.settings\")}</MenuButton>\r\n            <MenuButton to=\"/about\" icon={<InformationIcon />}>{t(\"interface.about\")}</MenuButton>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst MenuButton = ({ children, to, icon }) => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const match = (location.pathname === to);\r\n\r\n    const handleClick = () => {\r\n        navigate(to);\r\n    }\r\n    \r\n    return (\r\n        <button className={match ? \"menu-button active\" : \"menu-button\"}\r\n            onClick={() => handleClick()}\r\n        >\r\n            {icon && icon}\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const LoadingSpinner = () => (\r\n    <div className=\"loading-spinner\">\r\n        <div className=\"spinner\">\r\n            <span>\r\n                <span>\r\n                    <span>\r\n                        <span />\r\n                    </span>\r\n                </span>\r\n            </span>\r\n\r\n        </div>\r\n    </div>\r\n)","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const LanguageSwitcher = () => {\r\n    const [t, i18n] = useTranslation()\r\n    const currentLanguage = i18n.language;\r\n    const setLanguage = (language: string) => {\r\n        i18n.changeLanguage(language);\r\n        document.cookie = `i18next=${language}`;\r\n    }\r\n    return (\r\n        <fieldset className=\"language-switcher\">\r\n            <legend>{t(\"interface.language\")}</legend>\r\n            <button className={currentLanguage === 'en' ? 'active' : ''} onClick={() => setLanguage(\"en\")}>English</button>\r\n            <button className={currentLanguage === 'sv' ? 'active' : ''} onClick={() => setLanguage(\"sv\")}>Svenska</button>\r\n        </fieldset>\r\n    );\r\n}","import React from 'react';\r\n\r\ninterface IToggleSwitch {\r\n\tname: string;\r\n\tchecked: boolean;\r\n\tonChange: Function;\r\n\tdisabled?: boolean;\r\n}\r\n\r\nexport const ToggleSwitch: React.FC<IToggleSwitch> = (props) => {\r\n\tconst { name, checked, onChange, disabled } = props;\r\n\r\n\treturn (\r\n\t\t<div className=\"toggle-switch\">\r\n\t\t\t<input \r\n\t\t\t\tid={name}\r\n\t\t\t\tclassName=\"toggle-switch-input\" \r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tname={name}\r\n\t\t\t\tchecked={checked}\t\r\n\t\t\t\tonChange={(evt) => onChange(evt)}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t/>\r\n\t\t\t<label\r\n\t\t\t\tclassName=\"toggle-switch-label\"\r\n\t\t\t\thtmlFor={name}\r\n\t\t\t>\r\n\t\t\t\t<span className=\"toggle-switch-button\" />\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport const UnitSelector = () => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <fieldset>\r\n            <legend>{t(\"units.label\")}</legend>\r\n        </fieldset>\r\n    )\r\n}","import React from 'react';\r\nimport { LoadingSpinner } from '../components';\r\n\r\nexport const LoadingPage = () => (\r\n    <div className=\"loading-page\">\r\n        <LoadingSpinner />\r\n    </div>\r\n)","import React from 'react'\r\nimport { LanguageSwitcher, UnitSelector } from '../components'\r\n\r\nexport const SettingsPage = () => (\r\n    <>\r\n        <LanguageSwitcher />\r\n        <UnitSelector />\r\n    </>\r\n)","import \"./App.scss\";\r\nimport gwTable from \"./data/grossWeightTable.json\";\r\nimport rlTable from \"./data/roadLoadTable.json\";\r\nimport React, { useState } from \"react\";\r\nimport { ToggleSwitch } from \"./components/toggleSwitch.tsx\";\r\nimport {\r\n  calculate as calculateTS,\r\n  calculateAllowedLoad,\r\n  convertToTonnes,\r\n  convertToMillimetres\r\n} from \"./functions/calculations.ts\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nfunction App() {\r\n  const [t] = useTranslation();\r\n  const [serviceWeight, setServiceWeight] = useState(0);\r\n  const [taxedWeight, setTaxedWeight] = useState(0);\r\n  const [frontAxleOverride, setFrontAxleOverride] = useState(0);\r\n  const [backAxleOverride, setBackAxleOverride] = useState(0);\r\n  const [frontAxle, setFrontAxle] = useState(null);\r\n  const [backAxle, setBackAxle] = useState(null);\r\n  const [grossWeight, setGrossWeight] = useState(null);\r\n  const [displayKilos, setDisplayKilos] = useState(true);\r\n\r\n  const [result, setResult] = useState([0, 0, 0, 0]);\r\n\r\n  const handleServiceWeightChange = (evt) => {\r\n    let value = parseFloat(evt.target.value);\r\n    setServiceWeight(value);\r\n  };\r\n\r\n  const handleTaxedWeightChange = (evt) => {\r\n    let value = parseFloat(evt.target.value);\r\n    setTaxedWeight(value);\r\n  }\r\n\r\n  const handleFrontOverrideChange = (evt) => {\r\n    let value = parseFloat(evt.target.value);\r\n    setFrontAxleOverride(value);\r\n  };\r\n\r\n  const handleBackOverrideChange = (evt) => {\r\n    let value = parseFloat(evt.target.value);\r\n    setBackAxleOverride(value);\r\n  };\r\n\r\n  const handleFrontAxleChange = (evt) => {\r\n    let inputValue = evt.target.value;\r\n    let value =\r\n      typeof inputValue !== \"string\" ? inputValue.toString() : inputValue;\r\n    setFrontAxle(value);\r\n  };\r\n\r\n  const handleBackAxleChange = (evt) => {\r\n    let inputValue = evt.target.value;\r\n    let value =\r\n      typeof inputValue !== \"string\" ? inputValue.toString() : inputValue;\r\n    setBackAxle(value);\r\n  };\r\n\r\n  const handleGrossWeightChange = (evt) => {\r\n    let inputValue = evt.target.value;\r\n    let value =\r\n      typeof inputValue !== \"string\" ? inputValue.toString() : inputValue;\r\n    setGrossWeight(value);\r\n  };\r\n\r\n  const handleNumericInputFocus = (evt) => evt.target.select();\r\n\r\n  const calculate = (evt) => {\r\n    console.table(\r\n      frontAxleOverride,\r\n      backAxleOverride,\r\n      frontAxle,\r\n      backAxle,\r\n      grossWeight\r\n    );\r\n    if (frontAxleOverride === null || frontAxleOverride === undefined) return;\r\n    if (backAxleOverride === null || backAxleOverride === undefined) return;\r\n    if (frontAxle === null || frontAxle === undefined) return;\r\n    if (backAxle === null || backAxle === undefined) return;\r\n    if (grossWeight === null || backAxle === undefined) return;\r\n\r\n    let result = calculateTS(\r\n      taxedWeight,\r\n      frontAxleOverride,\r\n      backAxleOverride,\r\n      frontAxle,\r\n      backAxle,\r\n      grossWeight\r\n    );\r\n\r\n    setResult(result);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset>\r\n        <legend>{t(\"vehicleSpecification\")}</legend>\r\n        <div className=\"form-control\">\r\n          <label>{t(\"vehicleWeight\")}</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"weight\"\r\n            value={serviceWeight}\r\n            onFocus={handleNumericInputFocus}\r\n            onChange={handleServiceWeightChange}\r\n            pattern=\"[0-9]*\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>{t(\"taxedWeight\")}</label>\r\n          <input \r\n            value={taxedWeight}\r\n            onFocus={handleNumericInputFocus}\r\n            onChange={handleTaxedWeightChange}\r\n            type=\"number\"\r\n            pattern=\"[0-9]*\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>{t(\"frontAxleOverride\")}</label>\r\n          <input\r\n            type=\"number\"\r\n            value={frontAxleOverride}\r\n            onFocus={handleNumericInputFocus}\r\n            onChange={handleFrontOverrideChange}\r\n            pattern=\"[0-9]*\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>{t(\"backAxleOverride\")}</label>\r\n          <input\r\n            type=\"number\"\r\n            value={backAxleOverride}\r\n            onFocus={handleNumericInputFocus}\r\n            onChange={handleBackOverrideChange}\r\n            pattern=\"[0-9]*\"\r\n          />\r\n        </div>\r\n      </fieldset>\r\n      <fieldset>\r\n        <legend>{t(\"tableSettings\")}</legend>\r\n        <div className=\"form-control\">\r\n          <label>{t(\"frontAxle\")}</label>\r\n          <select name=\"frontAxle\" onChange={handleFrontAxleChange}>\r\n            <option value={null}>{t(\"interface.pleaseSelect\")}</option>\r\n            {Object.keys(rlTable).map((key) => (\r\n              <option key={\"fa\" + key} value={key}>\r\n                {t(`axleTypes.${key}`)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>{t(\"backAxle\")}</label>\r\n          <select name=\"backAxle\" onChange={handleBackAxleChange}>\r\n            <option value={null}>{t(\"interface.pleaseSelect\")}</option>\r\n            {Object.keys(rlTable).map((key) => (\r\n              <option key={\"ba\" + key} value={key}>\r\n                {t(`axleTypes.${key}`)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>{t(\"weightTable\")} ({t('units.mm.shorthand')})</label>\r\n          <select name=\"grossWeight\" onChange={handleGrossWeightChange}>\r\n            <option value={null}>{t(\"interface.pleaseSelect\")}</option>\r\n            {Object.keys(gwTable).map((key) => (\r\n              <option key={\"gw\" + key} value={key}>\r\n                {convertToMillimetres(parseFloat(key))}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n      <div className=\"result-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td className=\"header\">{t(\"class\")}</td>\r\n              <td className=\"text-center header\">{t(\"weightAllowance\")}</td>\r\n              <td className=\"text-right header\">{t(\"allowedLoad\")}</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {result.map((r, i) => (\r\n              <tr key={\"r\" + i}>\r\n                <td className=\"header\">BK{i + 1}</td>\r\n                <td className=\"text-center\">\r\n                  {displayKilos ? (\r\n                    <span>{r} kg</span>\r\n                  ) : (\r\n                    <span>{convertToTonnes(r)} t</span>\r\n                  )}\r\n                </td>\r\n                <td className=\"text-right\">\r\n                  {displayKilos ? (\r\n                    <span>{calculateAllowedLoad(r, serviceWeight)} kg</span>\r\n                  ) : (\r\n                    <span>\r\n                      {convertToTonnes(calculateAllowedLoad(r, serviceWeight))}{\" \"}\r\n                      t\r\n                    </span>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"unit-toggle\">\r\n          <ToggleSwitch\r\n            name=\"kiloToggler\"\r\n            onChange={() => setDisplayKilos(!displayKilos)}\r\n            checked={displayKilos}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button onClick={() => calculate()} className=\"btn\">\r\n        {t(\"interface.calculate\")}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n, { InitOptions } from 'i18next';\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst options: InitOptions = {\r\n    fallbackLng: 'sv',\r\n    debug: true,\r\n    detection: {\r\n        order: ['queryString', 'cookie'],\r\n        caches: ['cookie']\r\n    },\r\n    interpolation: {\r\n        escapeValue: false\r\n    }\r\n}\r\n\r\ni18n.use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init(options)\r\n\r\nexport default i18n;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route, useLocation } from \"react-router-dom\";\nimport useAckee from 'use-ackee';\nimport { AboutPage, LoadingPage, SettingsPage } from './pages';\nimport { Menubar } from './components';\nimport App from './App';\nimport 'normalize.css';\nimport reportWebVitals from './reportWebVitals';\nimport './localisation/i18n';\n\nconst Main = () => (\n  <React.StrictMode>\n    <Suspense fallback={<LoadingPage />}>\n      <Router>\n        <Content />\n      </Router>\n    </Suspense>\n  </React.StrictMode>\n)\n\nconst Content = () => {\n  const location = useLocation();\n\n  useAckee(location.pathname, {\n    server: 'https://ackee.grovecastle.me',\n    domainId: 'ae65943e-cd8e-4141-900a-12973a1f661f'\n  }, {\n    detailed: true,\n    ignoreLocalhost: true\n  });\n\n  return (\n    <>\n      <section className=\"app-content\">\n        <Routes>\n          <Route path=\"/\" element={<App />} />\n          <Route path=\"/loading\" element={<LoadingPage />} />\n          <Route path=\"/settings\" element={<SettingsPage />} />\n          <Route path=\"/about\" element={<AboutPage />} />\n        </Routes>\n      </section>\n      <Menubar />\n    </>\n  )\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}